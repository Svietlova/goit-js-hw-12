{"version":3,"file":"commonHelpers.js","sources":["../src/js/render-functions.js","../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["export function renderMarkup(data) {\n  return data.hits\n    .map(\n      el =>\n        `<div class=\"gallery-item\">\n            <a class=\"gallery-link\" href=\"${el.largeImageURL}\">\n                <img class=\"gallery-image\" src=\"${el.webformatURL}\" alt=\"${el.tags}\" />\n            </a>\n            <div class=\"gallery-item-info\">\n                <p class=\"gallery-item-info-par\">\n                    <span class=\"gallery-item-info-span\">Likes: <span>${el.likes}</span>\n                    </span>    \n                </p>\n                <p class=\"gallery-item-info-par\">\n                    <span class=\"gallery-item-info-span\">Views: <span>${el.views}</span>\n                    </span>    \n                </p>\n                <p class=\"gallery-item-info-par\">\n                    <span class=\"gallery-item-info-span\">Comments: <span>${el.comments}</span>\n                    </span>    \n                </p>\n                <p class=\"gallery-item-info-par\">\n                    <span class=\"gallery-item-info-span\">Downloads: <span>${el.downloads}</span>\n                    </span>    \n                </p>\n            </div>\n        </div>`\n    )\n    .join('');\n}\n\n//\n//\n\n// import iziToast from 'izitoast';\n// import errorIcon from '../img/error.svg';\n// import 'izitoast/dist/css/iziToast.min.css';\n// import SimpleLightbox from 'simplelightbox';\n// import 'simplelightbox/dist/simple-lightbox.min.css';\n// import { pageNow } from './pixabay-api';\n// import { btnLoadClasses } from './pixabay-api';\n// const gallery = document.querySelector('.gallery');\n// let totalPages = 0;\n// export function showResult(result) {\n//   totalPages = Math.ceil(result.totalHits / 15);\n//   if (result.total === 0) {\n//     resetHtml();\n//     iziToast.error({\n//       iconUrl: errorIcon,\n//       iconColor: 'color: #fff',\n//       message:\n//         '<p>Sorry, there are no images matching</p> <p>your search query. Please try again!</p>',\n//       messageColor: '#FAFAFB',\n//       messageSize: '16px',\n//       position: 'topRight',\n//       theme: 'dark',\n//       backgroundColor: '#EF4040',\n//     });\n//   } else if (totalPages === pageNow) {\n//     btnLoadClasses.toggle('bnt-isvisible', true);\n//     iziToast.error({\n//       iconUrl: errorIcon,\n//       iconColor: 'color: #fff',\n//       message:\n//         \"<p>We're sorry, but you've reached the end of search results.</p>\",\n//       messageColor: '#FAFAFB',\n//       messageSize: '16px',\n//       position: 'topRight',\n//       theme: 'dark',\n//       backgroundColor: '#EF4040',\n//     });\n//   } else {\n//     const images = result.hits.slice(0, 20);\n//     if (pageNow === 1) {\n//       resetHtml();\n//     }\n//     gallery.insertAdjacentHTML(\n//       'beforeend',\n//       images\n//         .map(\n//           ({\n//             webformatURL,\n//             largeImageURL,\n//             tags,\n//             likes,\n//             views,\n//             comments,\n//             downloads,\n//           }) => {\n//             return `<div class=\"container\">\n//                         <div class=\"card\">\n//                             <a class=\"gallery-link\" href=\"${largeImageURL}\">\n//                                 <img\n//                                 class=\"image-card\"\n//                                 src=\"${webformatURL}\"\n//                                 alt=\"${tags}\"\n//                                 />\n//                             </a>\n//                             <ul class=\"list\">\n//                             <li class=\"list-item\">\n//                                 <p class=\"title\">Likes</p>\n//                                 <p class=\"value\">${likes}</p>\n//                             </li>\n//                             <li class=\"list-item\">\n//                                 <p class=\"title\">Views</p>\n//                                 <p class=\"value\">${views}</p>\n//                             </li>\n//                             <li class=\"list-item\">\n//                                 <p class=\"title\">Comments</p>\n//                                 <p class=\"value\">${comments}</p>\n//                             </li>\n//                             <li class=\"list-item\">\n//                                 <p class=\"title\">Downloads</p>\n//                                 <p class=\"value\">${downloads}</p>\n//                             </li>\n//                             </ul>\n//                         </div>\n//                     </div>`;\n//           }\n//         )\n//         .join('')\n//     );\n//     if (pageNow > 1) {\n//       const scrollHight = gallery.getBoundingClientRect().height;\n//       window.scrollBy({\n//         top: scrollHight,\n//         behavior: 'smooth',\n//       });\n//     }\n//     btnLoadClasses.toggle('bnt-isvisible', false);\n//   }\n//   const lightbox = new SimpleLightbox('.gallery-link', {\n//     captionsData: 'alt',\n//     captionDelay: 250,\n//     captionPosition: 'bottom',\n//   });\n//   lightbox.refresh();\n//   lightbox.on('shown.simplelightbox', () => {\n//     const overlay = document.querySelector('.sl-wrapper');\n//     const counter = document.querySelector('.sl-counter');\n//     const buttonClose = document.querySelector('.sl-close');\n//     const arrowNavigation = document.querySelectorAll(\n//       '.sl-wrapper .sl-navigation button'\n//     );\n//     overlay.style.backgroundColor = 'rgba(46, 47, 66, 0.8)';\n//     counter.style.color = '#fff';\n//     counter.style.fontFamily = 'Montserrat';\n//     counter.style.top = '16px';\n//     buttonClose.style.color = '#fff';\n//     arrowNavigation.forEach(item => (item.style.color = '#fff'));\n//   });\n// }\n// export function resetHtml() {\n//   gallery.innerHTML = '';\n//   btnLoadClasses.toggle('bnt-isvisible', true);\n// }","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst KEY = '42725994-1a6cd5432fa5183da0eabdd43';\nconst URL = 'https://pixabay.com/api/';\nconst loader = document.querySelector('.loader');\n\nexport function fetchImages(searchWord) {\n  const searchParamObj = {\n    key: KEY,\n    q: searchWord,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  };\n  const searchParams = new URLSearchParams(searchParamObj);\n\n  loader.style.display = 'block';\n\n  return fetch(`${URL}?${searchParams}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`Error! Status: ${response.status}`);\n      }\n      return response.json();\n    })\n    .then(data => {\n      loader.style.display = 'none';\n\n      if (data.hits.length === 0) {\n        iziToast.error({\n          timeout: 3000,\n          position: 'topRight',\n          message:\n            'There are no images matching your search query. Please, enter something else!',\n        });\n      }\n      return data;\n    })\n    .catch(error => {\n      console.error('Error fetching data!', error);\n    });\n}\n\n//\n//\n\n// import axios from 'axios';\n// import { showResult } from './render-functions';\n// import { resetHtml } from './render-functions';\n// const API_KEY = '42515618-500ad6d8e1f921b5ea984b145';\n// const spanIsVisible = document.querySelector('.isVisible');\n// const loaderClasses = spanIsVisible.classList;\n// const btnIsVisible = document.querySelector('.bnt-isvisible');\n// export const btnLoadClasses = btnIsVisible.classList;\n// export let pageNow = 1;\n// export function resetCountPages() {\n//   pageNow = 1;\n// }\n// export function countPages() {\n//   pageNow++;\n// }\n// export function getImages(name) {\n//   loaderClasses.toggle('isVisible', false);\n//   btnLoadClasses.toggle('bnt-isvisible', true);\n//   const URL = `https://pixabay.com/api/?key=${API_KEY}&q=${encodeURIComponent(\n//     name\n//   )}&image_type=photo&orientation=horizontal&safesearch=true&per_page=15&page=${pageNow}`;\n//   const fetch = async () => {\n//     const response = await axios.get(URL);\n//     loaderClasses.toggle('isVisible', true);\n//     btnLoadClasses.toggle('bnt-isvisible', false);\n//     return response.data;\n//   };\n//   fetch()\n//     .then(result => showResult(result))\n//     .catch(error => {\n//       console.log(error);\n//       resetHtml();\n//     });\n// }","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport { renderMarkup } from './js/render-functions.js';\nimport { fetchImages } from './js/pixabay-api.js';\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  nav: true,\n  captions: true,\n  captionsData: 'alt',\n  captionDelay: 150,\n});\n\nconst form = document.querySelector('.search-form');\nconst container = document.querySelector('.gallery');\nlet searchWord = '';\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  container.innerHTML = '';\n  searchWord = form.elements.searchWord.value.trim();\n\n  fetchImages(searchWord)\n    .then(data => {\n      const markup = renderMarkup(data);\n      container.insertAdjacentHTML('beforeend', markup);\n\n      lightbox.refresh();\n    })\n    .catch(error => {\n      console.error('Error:', error);\n    });\n  form.reset();\n}\n\n//\n//\n\n// import { getImages } from './js/pixabay-api';\n// import { countPages } from './js/pixabay-api';\n// import { resetCountPages } from './js/pixabay-api';\n// const fetchUsersBtn = document.querySelector('button[data-start]');\n// const input = document.querySelector('#data-search');\n// const btnLoadMore = document.querySelector('button[data-loadmore]');\n// let globalNameImage;\n// fetchUsersBtn.addEventListener('click', () => {\n//   const nameImage = input.value.trim();\n//   resetCountPages();\n//   if (nameImage !== '') {\n//     getImages(nameImage.trim());\n//     globalNameImage = nameImage;\n//   }\n// });\n// btnLoadMore.addEventListener('click', () => {\n//   countPages();\n//   getImages(globalNameImage);\n// });"],"names":["renderMarkup","data","el","KEY","URL","loader","fetchImages","searchWord","searchParamObj","searchParams","response","iziToast","error","lightbox","SimpleLightbox","form","container","onSubmit","event","markup"],"mappings":"6vBAAO,SAASA,EAAaC,EAAM,CACjC,OAAOA,EAAK,KACT,IACCC,GACE;AAAA,4CACoCA,EAAG,aAAa;AAAA,kDACVA,EAAG,YAAY,UAAUA,EAAG,IAAI;AAAA;AAAA;AAAA;AAAA,wEAIVA,EAAG,KAAK;AAAA;AAAA;AAAA;AAAA,wEAIRA,EAAG,KAAK;AAAA;AAAA;AAAA;AAAA,2EAILA,EAAG,QAAQ;AAAA;AAAA;AAAA;AAAA,4EAIVA,EAAG,SAAS;AAAA;AAAA;AAAA;AAAA,eAKnF,EACA,KAAK,EAAE,CACZ,CC1BA,MAAMC,EAAM,qCACNC,EAAM,2BACNC,EAAS,SAAS,cAAc,SAAS,EAExC,SAASC,EAAYC,EAAY,CACtC,MAAMC,EAAiB,CACrB,IAAKL,EACL,EAAGI,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,EACQE,EAAe,IAAI,gBAAgBD,CAAc,EAEvD,OAAAH,EAAO,MAAM,QAAU,QAEhB,MAAM,GAAGD,CAAG,IAAIK,CAAY,EAAE,EAClC,KAAKC,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,kBAAkBA,EAAS,MAAM,EAAE,EAErD,OAAOA,EAAS,MACtB,CAAK,EACA,KAAKT,IACJI,EAAO,MAAM,QAAU,OAEnBJ,EAAK,KAAK,SAAW,GACvBU,EAAS,MAAM,CACb,QAAS,IACT,SAAU,WACV,QACE,+EACZ,CAAS,EAEIV,EACR,EACA,MAAMW,GAAS,CACd,QAAQ,MAAM,uBAAwBA,CAAK,CACjD,CAAK,CACL,CCpCA,MAAMC,EAAW,IAAIC,EAAe,aAAc,CAChD,IAAK,GACL,SAAU,GACV,aAAc,MACd,aAAc,GAChB,CAAC,EAEKC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAY,SAAS,cAAc,UAAU,EACnD,IAAIT,EAAa,GAEjBQ,EAAK,iBAAiB,SAAUE,CAAQ,EAExC,SAASA,EAASC,EAAO,CACvBA,EAAM,eAAc,EAEpBF,EAAU,UAAY,GACtBT,EAAaQ,EAAK,SAAS,WAAW,MAAM,KAAI,EAEhDT,EAAYC,CAAU,EACnB,KAAKN,GAAQ,CACZ,MAAMkB,EAASnB,EAAaC,CAAI,EAChCe,EAAU,mBAAmB,YAAaG,CAAM,EAEhDN,EAAS,QAAO,CACtB,CAAK,EACA,MAAMD,GAAS,CACd,QAAQ,MAAM,SAAUA,CAAK,CACnC,CAAK,EACHG,EAAK,MAAK,CACZ"}